name: CI

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: pip install -r services/api/requirements.txt
      - name: Run API tests
        run: pytest services/api/tests

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        working-directory: apps/web
        run: npm ci
      - name: Install Playwright browsers
        working-directory: apps/web
        run: npx playwright install --with-deps
      - name: Lint
        working-directory: apps/web
        run: npm run lint
      - name: Run Playwright tests
        working-directory: apps/web
        env:
          CI: "1"
        run: npm test

  docker:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    env:
      REGISTRY: ghcr.io
      IMAGE_PREFIX: ${{ github.repository }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: infra/docker/api.Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/api:${{ github.sha }}
      - name: Build and push web image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: infra/docker/web.Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/web:${{ github.sha }}
